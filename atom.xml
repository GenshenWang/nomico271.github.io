<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WGS-Blog</title>
  <subtitle>Welcome to the real world,it is suck but you gonna love it.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://nomico271.github.io/"/>
  <updated>2017-05-08T09:40:48.423Z</updated>
  <id>https://nomico271.github.io/</id>
  
  <author>
    <name>GenshenWang</name>
    <email>wanggenshen_noaman@126.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java + Spring Email Send</title>
    <link href="https://nomico271.github.io/2017/05/08/Java-Spring%E5%AE%9E%E7%8E%B0%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81/"/>
    <id>https://nomico271.github.io/2017/05/08/Java-Spring实现邮件发送/</id>
    <published>2017-05-08T09:22:19.000Z</published>
    <updated>2017-05-08T09:40:48.423Z</updated>
    
    <content type="html"><![CDATA[<p>Java + Spring 实现邮件的发送</p>
<p>有关邮件发送的详细内容和代码实现可参看网址：<a href="http://www.yiibai.com/javamail_api。本文只做入门介绍。" target="_blank" rel="external">http://www.yiibai.com/javamail_api。本文只做入门介绍。</a></p>
<hr>
<p>##<strong>JavaMail API 介绍</strong><br><strong>JavaMail API</strong>按其功能划分通常可分为如下三大类：</p>
<blockquote>
<ul>
<li><strong>Message类</strong> ：创建和解析邮件的核心API，用于创建一封邮件，可以设置发件人，收件人，邮件主题，正文信息，发送时间等信息。</li>
<li><strong>Transport类</strong>：发送邮件的核心API类</li>
<li><strong>Store类</strong>：接收邮件的核心API类</li>
</ul>
</blockquote>
<p><strong>邮件相关协议：</strong></p>
<blockquote>
<p><strong>SMTP协议</strong>: 发送邮件协议；<br><strong>POP3协议</strong> :  获取邮件协议；<br><strong>IMAP</strong> :  接收信息的高级协议；<br><strong>MIME</strong> :  邮件拓展内容格式：信息格式，附件格式；</p>
</blockquote>
<p>下图用于演示两帐户相互发送邮件的过程:<br><img src="/img/email/1.png" alt="Alt text"></p>
<h2 id="开启SMTP服务"><a href="#开启SMTP服务" class="headerlink" title="开启SMTP服务"></a>开启SMTP服务</h2><p>因为本文只做如何发送邮件的介绍，发送邮件跟SMTP协议相关，所以在发送前需要保证所使用的邮件客户端开启了SMTP相关服务。本文采用的是QQ邮箱（也可以改用163邮箱)。<br>下面讲述下如何在qq邮箱中开启SMTP服务：<br><img src="/img/email/2.png" alt="Alt text"></p>
<p>首先进入qq邮箱点击设置，在账户里可看到开启服务项，点击开启(照片中我已开启服务)，会弹出让你发送短信”<strong>配置邮件客户端</strong>“的提示框。<br>按照要求发送短信后点击”我已发送”，会接收到一个像下面图片中的授权码，这个授权码要记下来，在后续代码实现中的密码用到的就是这个授权码(不是qq账号密码)：<br><img src="/img/email/3.png" alt="Alt text"></p>
<hr>
<p>##<strong>代码实现：</strong></p>
<h2 id="Java-SE-发送Email"><a href="#Java-SE-发送Email" class="headerlink" title="Java SE 发送Email"></a>Java SE 发送Email</h2><p>首先引入jar包：<br>下载Javax Mail的jar包<a href="https://java.net/projects/javamail/pages/Home" target="_blank" rel="external">https://java.net/projects/javamail/pages/Home</a> </p>
<p>下面是实现的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div></pre></td><td class="code"><pre><div class="line">package test2;</div><div class="line"></div><div class="line">import java.util.Date;</div><div class="line">import java.util.Properties;</div><div class="line"></div><div class="line">import javax.mail.PasswordAuthentication;</div><div class="line">import javax.mail.Session;</div><div class="line">import javax.mail.Transport;</div><div class="line">import javax.mail.internet.InternetAddress;</div><div class="line">import javax.mail.internet.MimeMessage;</div><div class="line"></div><div class="line">public class JavaMailDemo &#123;</div><div class="line"></div><div class="line">	 // 发件人的 邮箱(qq邮箱)</div><div class="line">    public static String senderEmailAccount = &quot;1032335358@qq.com&quot;;</div><div class="line">    //此为SMTP客户端的授权码</div><div class="line">    public static String senderEmailPassword = &quot;****&quot;;</div><div class="line">    // 发件人邮箱的 SMTP 服务器地址</div><div class="line">    public static String senderEmailSMTPHost = &quot;smtp.qq.com&quot;;</div><div class="line">    // 收件人邮箱（替换为自己知道的有效邮箱）</div><div class="line">    public static String receiverMailAccount = &quot;1032335358@qq.com&quot;;</div><div class="line">    </div><div class="line"></div><div class="line">    public static void main(String[] args) throws Exception &#123;</div><div class="line">    	</div><div class="line">        // 1. 创建参数配置</div><div class="line">        Properties props = new Properties();                   </div><div class="line">        props.setProperty(&quot;mail.transport.protocol&quot;, &quot;smtp&quot;);  </div><div class="line">        props.setProperty(&quot;mail.smtp.host&quot;, senderEmailSMTPHost);  </div><div class="line">        props.setProperty(&quot;mail.smtp.auth&quot;, &quot;true&quot;);   </div><div class="line">        // SMTP 服务器的端口</div><div class="line">        final String smtpPort = &quot;465&quot;;</div><div class="line">        props.setProperty(&quot;mail.smtp.port&quot;, smtpPort);</div><div class="line">        props.setProperty(&quot;mail.smtp.socketFactory.class&quot;, &quot;javax.net.ssl.SSLSocketFactory&quot;);</div><div class="line">        props.setProperty(&quot;mail.smtp.socketFactory.fallback&quot;, &quot;false&quot;);</div><div class="line">        props.setProperty(&quot;mail.smtp.socketFactory.port&quot;, smtpPort);</div><div class="line"></div><div class="line">        // 2. 根据配置创建会话对象, 用于和邮件服务器交互</div><div class="line">        // Get the Session object.</div><div class="line">        Session session = Session.getInstance(props,</div><div class="line">           new javax.mail.Authenticator() &#123;</div><div class="line">              protected PasswordAuthentication getPasswordAuthentication() &#123;</div><div class="line">                 return new PasswordAuthentication(senderEmailAccount, senderEmailPassword);</div><div class="line">              &#125;</div><div class="line">           &#125;);</div><div class="line">        session.setDebug(true);                                 // 设置为debug模式, 可以查看详细的发送 log</div><div class="line"></div><div class="line">        // 4. 根据 Session 获取邮件传输对象</div><div class="line">		Transport transport = null;</div><div class="line">		try &#123;</div><div class="line">			// 3. 创建一封邮件</div><div class="line">			MimeMessage message = createMimeMessage(session, senderEmailAccount, receiverMailAccount);</div><div class="line"></div><div class="line">			transport = session.getTransport();</div><div class="line"></div><div class="line">			// 5. 使用 邮箱账号 和 密码 连接邮件服务器</div><div class="line">			transport.connect(senderEmailAccount, senderEmailPassword);</div><div class="line"></div><div class="line">			// 6. 发送邮件, 发到所有的收件地址, message.getAllRecipients() 获取到的是在创建邮件对象时添加的所有收件人, 抄送人, 密送人</div><div class="line">			transport.sendMessage(message, message.getAllRecipients());</div><div class="line">		&#125; catch (Exception e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;finally &#123;</div><div class="line">			// 7. 关闭连接</div><div class="line">			transport.close();</div><div class="line">		&#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 创建一封只包含文本的简单邮件</div><div class="line">     *</div><div class="line">     * @param session 和服务器交互的会话</div><div class="line">     * @param sendMail 发件人邮箱</div><div class="line">     * @param receiveMail 收件人邮箱</div><div class="line">     * @return</div><div class="line">     * @throws Exception</div><div class="line">     */</div><div class="line">    public static MimeMessage createMimeMessage(Session session, String sendMail, String receiveMail) throws Exception &#123;</div><div class="line">        // 1. 创建一封邮件</div><div class="line">        MimeMessage message = new MimeMessage(session);</div><div class="line"></div><div class="line">        // 2. From: 发件人</div><div class="line">        message.setFrom(new InternetAddress(sendMail, &quot;QQ邮箱&quot;, &quot;UTF-8&quot;));</div><div class="line"></div><div class="line">        // 3. To: 收件人（可以增加多个收件人、抄送、密送）</div><div class="line">        message.setRecipient(MimeMessage.RecipientType.TO, new InternetAddress(receiveMail, &quot;1032335358@qq.com&quot;, &quot;UTF-8&quot;));</div><div class="line"></div><div class="line">        // 4. Subject: 邮件主题</div><div class="line">        message.setSubject(&quot;邮箱登录异常&quot;, &quot;UTF-8&quot;);</div><div class="line"></div><div class="line">        // 5. Content: 邮件正文（可以使用html标签）</div><div class="line">        message.setContent(&quot;您好，您的QQ邮箱账号异常，请重新登录！&quot;, &quot;text/html;charset=UTF-8&quot;);</div><div class="line"></div><div class="line">        // 6. 设置发件时间</div><div class="line">        message.setSentDate(new Date());</div><div class="line"></div><div class="line">        // 7. 保存设置</div><div class="line">        message.saveChanges();</div><div class="line"></div><div class="line">        return message;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>程序运行成功以后，即可收到一封类似下图的邮件：<br><img src="/img/email/4.png" alt="Alt text"></p>
<hr>
<h2 id="使用Spring发送Email"><a href="#使用Spring发送Email" class="headerlink" title="使用Spring发送Email"></a><strong>使用Spring发送Email</strong></h2><p>Spring Email 抽象的核心是MailSender接口，MailSender的实现能够通过连接Email服务器实现邮件发送的功能。</p>
<p>Spring自带了一个MailSender的实现：JavaMailSenderImpl. 它会使用JavaMail API来发送Email。</p>
<p>下面是代码实现：</p>
<ol>
<li><p>首先引入必须的jar包：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">   &lt;groupId&gt;com.sun.mail&lt;/groupId&gt;       </div><div class="line">   &lt;artifactId&gt;javax.mail&lt;/artifactId&gt;</div><div class="line">   &lt;version&gt;1.5.5&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>配置邮件发送器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">package com.wgs.mailSender.util;</div><div class="line"></div><div class="line">import org.slf4j.Logger;</div><div class="line">import org.slf4j.LoggerFactory;</div><div class="line">import org.springframework.beans.factory.InitializingBean;</div><div class="line">import org.springframework.mail.SimpleMailMessage;</div><div class="line">import org.springframework.mail.javamail.JavaMailSenderImpl;</div><div class="line">import org.springframework.stereotype.Service;</div><div class="line"></div><div class="line">import java.util.Properties;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by wanggenshen_sx on 2017/5/8.</div><div class="line"> */</div><div class="line">Service</div><div class="line">public class MailSender implements InitializingBean &#123;</div><div class="line">	private static final Logger logger = LoggerFactory.getLogger(MailSender.class);</div><div class="line">	private JavaMailSenderImpl mailSender;</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * 发送邮件</div><div class="line">	 * @param to</div><div class="line">	 */</div><div class="line">	public void sendMail(String to)&#123;</div><div class="line">		SimpleMailMessage mailMessage = new SimpleMailMessage();</div><div class="line">		//发送方邮箱</div><div class="line">		mailMessage.setFrom(&quot;1032335358@qq.com&quot;);</div><div class="line">		//接收方邮箱</div><div class="line">		mailMessage.setTo(to);</div><div class="line">		//发送的邮件主题</div><div class="line">		mailMessage.setSubject(&quot;Spring Mail Sender&quot;);</div><div class="line">		//发送的邮件内容</div><div class="line">		mailMessage.setText(&quot;这是用Spring框架发送的邮件!&quot;);</div><div class="line"></div><div class="line">		mailSender.send(mailMessage);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * 配置邮件发送器</div><div class="line">	 * @throws Exception</div><div class="line">	 */</div><div class="line">	@Override</div><div class="line">	public void afterPropertiesSet() throws Exception &#123;</div><div class="line">		mailSender = new JavaMailSenderImpl();</div><div class="line">		//用户名</div><div class="line">		mailSender.setUsername(&quot;1032335358@qq.com&quot;);</div><div class="line">		//SMTP客户端的授权码(每个人这个密码不一样，密码与上面的username对应密码相同)</div><div class="line">		mailSender.setPassword(&quot;**********&quot;);</div><div class="line">		// 发件人邮箱的 SMTP 服务器地址</div><div class="line">		mailSender.setHost(&quot;smtp.qq.com&quot;);</div><div class="line">		//邮件服务器监听的端口</div><div class="line">		mailSender.setPort(465);</div><div class="line">		//协议SMTP+SSL</div><div class="line">		mailSender.setProtocol(&quot;smtps&quot;);</div><div class="line">		mailSender.setDefaultEncoding(&quot;utf8&quot;);</div><div class="line">		Properties javaMailProperties = new Properties();</div><div class="line">		javaMailProperties.put(&quot;mail.smtp.ssl.enable&quot;, true);</div><div class="line">		mailSender.setJavaMailProperties(javaMailProperties);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>邮件发送接口<br>写了一个简单邮件发送的接口，可用Postman进行测试：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">package com.wgs.mailSender.controller;</div><div class="line"></div><div class="line">import com.fasterxml.jackson.databind.util.JSONPObject;</div><div class="line">import com.wgs.mailSender.util.JSONUtil;</div><div class="line">import com.wgs.mailSender.util.MailSender;</div><div class="line">import org.slf4j.Logger;</div><div class="line">import org.slf4j.LoggerFactory;</div><div class="line">import org.springframework.beans.factory.annotation.Autowired;</div><div class="line">import org.springframework.stereotype.Controller;</div><div class="line">import org.springframework.web.bind.annotation.RequestMapping;</div><div class="line">import org.springframework.web.bind.annotation.RequestMethod;</div><div class="line">import org.springframework.web.bind.annotation.ResponseBody;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by wanggenshen_sx on 2017/5/8.</div><div class="line"> */</div><div class="line">@Controller</div><div class="line">public class MailSenderController &#123;</div><div class="line">	private static final Logger logger = LoggerFactory.getLogger(MailSenderController.class);</div><div class="line"></div><div class="line">	@Autowired</div><div class="line">	MailSender mailSender;</div><div class="line"></div><div class="line">	@RequestMapping(path = &#123;&quot;/mail/mailSend&quot;&#125;, method = &#123;RequestMethod.POST&#125;)</div><div class="line">	@ResponseBody</div><div class="line">	public String emailSend()&#123;</div><div class="line"></div><div class="line">		try &#123;</div><div class="line">			mailSender.sendMail(&quot;1032335358@qq.com&quot;);</div><div class="line">			return JSONUtil.getJSONString(0, &quot;SUCCESS&quot;);</div><div class="line">		&#125;catch (Exception e)&#123;</div><div class="line">			logger.error(&quot;邮件发送失败: &quot; + e.getMessage());</div><div class="line">			return JSONUtil.getJSONString(1, &quot;FAILED&quot;);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>测试<br>运行项目后打开PostMan进行测试：<br><img src="/img/email/5.png" alt="Alt text"></p>
</li>
</ol>
<p>从返回的JSON字符串可以看出发送已经成功。<br>并且确实收到一份邮件:<br><img src="/img/email/6.png" alt="Alt text"></p>
<hr>
<p>参考：<a href="http://blog.csdn.net/xietansheng/article/details/51673073" target="_blank" rel="external">http://blog.csdn.net/xietansheng/article/details/51673073</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java + Spring 实现邮件的发送&lt;/p&gt;
&lt;p&gt;有关邮件发送的详细内容和代码实现可参看网址：&lt;a href=&quot;http://www.yiibai.com/javamail_api。本文只做入门介绍。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Welcome to myblog---wgs/2017/04/27</title>
    <link href="https://nomico271.github.io/2017/04/27/Welcome-to-myblog-wgs-2017-04-27/"/>
    <id>https://nomico271.github.io/2017/04/27/Welcome-to-myblog-wgs-2017-04-27/</id>
    <published>2017-04-27T02:17:49.000Z</published>
    <updated>2017-04-27T02:19:40.380Z</updated>
    
    <content type="html"><![CDATA[<p>你好，我叫王根深，一个纯粹的喜欢Java的渣渣程序员，希望在这条路上能够越走越远，早日成为一个独当一面的Java工程师。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;你好，我叫王根深，一个纯粹的喜欢Java的渣渣程序员，希望在这条路上能够越走越远，早日成为一个独当一面的Java工程师。&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://nomico271.github.io/2017/04/27/hello-world/"/>
    <id>https://nomico271.github.io/2017/04/27/hello-world/</id>
    <published>2017-04-27T02:02:40.563Z</published>
    <updated>2017-04-27T02:04:54.454Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
